20x10 visual board but 2 extra rows above in which pieces will spawn

7 total tetrominos/pieces:
    O block (yellow)
    I (cyan)
    S (green)
    Z (red)
    L (orange)
    J (Blue)
    T (purple)

Rules:
    using rules similar to classic tetris (basically can't rotate touch pieces, soft drops etc)
    1 pieces falls down at a rate that keeps increasing
    3 pieces are visible in queue
    can hold/swap 1 piece per turn
    score goes up based on lines cleared, combos etc
    tetrominos can rotate 90deg Left, 90def Right and 180deg
    If spawning block has no where to go on row 20 then the game is lost
    Can clear 1/2/3/4 lines 4 being tetris
    Clearing lines moves lines above lines cleared down the amount of levels that were cleared 

Tetrominos start locations:
    I and O spawn in the middle columns
    Rest of the pieces spawn in the left-middle columns
    Spawn horizontally with J,L and T spawning flat-side down
    Spawn above playfield; row 21 for I and 21/22 for every other piece
    Immediately drop one space if no existing block in path

Controls:
    Can use terminos for inputs (N.B. only works on unix based systems)
    Esc/f1 to pause
    right arrow key - move right
    left arrow key - move left
    up arrow key - rotate clockwise 90deg
    soft drop - move piece down at a faster rate
    space bar - hard drop (immediately move current tetromino to the next line below it) 
    f key - swap/hold piece
    d key - rotate piece 180deg
    s key - rotate piece 90deg anti-clockwise

7-bag Random Generator:
    Create a random order of tetrominos e.x.: (I, J, L, O, S, T, Z) then dish them out 1by1 and once bag
    finished create a new bag

using SRS (super/standard rotating system)


Grid coords:
     0   1   3   4   5   6   7   8   9   10
0  |   |   |   |   |   |   |   |   |   |   |
1  |   |   |   |   |   |   |   |   |   |   |
2  |   |   |   |   | ■ | ■ |   |   |   |   |
3  |   |   |   | ■ | ■ |   |   |   |   |   |
4  |   |   |   |   |   |   |   |   |   |   |
5  |   |   |   |   |   |   |   |   |   |   |
6  |   |   |   |   |   |   |   |   |   |   |
7  |   |   |   |   |   |   |   |   |   |   |
8  |   |   |   |   |   |   |   |   |   |   |
9  |   |   |   |   |   |   |   |   |   |   |
10 |   |   |   |   |   |   |   |   |   |   |
11 |   |   |   |   |   |   |   |   |   |   |
12 |   |   |   |   |   |   |   |   |   |   |
13 |   |   |   |   |   |   |   |   |   |   |
14 |   |   |   |   |   |   |   |   |   |   |
15 |   |   |   |   |   |   |   |   |   |   |
16 |   |   |   |   |   |   |   |   |   |   |
17 |   |   |   |   |   |   |   |   |   |   |
18 |   |   |   |   |   |   |   |   |   |   |
19 |   |   |   |   |   |   |   |   |   |   |
20 |   |   |   |   |   |   |   |   |   |   |
21 |   |   |   |   |   |   |   |   |   |   |

Lines_Cleared:
- Starting from bottom of board checking next 20
    - check if current row is full
        - if yes
            - check if next row is full
                -if yes
                    - check if next row is full
                
                - if no you scored single
        - if not
            check go next row